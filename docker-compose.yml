services:
  signaling-server:
    build: .
    command: cargo run --bin signaling_server
    networks:
      internet:
        ipv4_address: 10.0.0.2
    ports:
     - "9090:9090" 
    volumes:
      - .:/workspace
    working_dir: /workspace

  alice-nat:
    build: .
    depends_on:
      - signaling-server
    privileged: true
    networks:
      internet:
        ipv4_address: 10.0.0.3
      alice-lan:
        ipv4_address: 192.168.1.2
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
        /bin/bash -c "
          echo 'Alice NAT starting...';
          echo 1 > /proc/sys/net/ipv4/ip_forward || echo 'IP forward OK';
          
          # fiX routing p:
          ip route del default || echo 'No default route';
          ip route add default via 10.0.0.1 dev eth1 || echo 'Default route OK';
          
          iptables -t nat -A PREROUTING -p udp --dport 9090 -j DNAT --to-destination 10.0.0.2:9090 || echo 'DNAT OK';
          iptables -t nat -A PREROUTING -p udp --dport 5000 -j DNAT --to-destination 192.168.1.3:5000 || echo 'Alice P2P DNAT OK';
          
          # simple nat:
          iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE || echo 'MASQ OK';
          
          iptables -A FORWARD -j ACCEPT || echo 'FORWARD OK';
          echo '✅ Alice NAT ready';
          while true; do sleep 60; echo 'Alice NAT alive'; done
        "

  bob-nat:
    build: .
    depends_on:
      - signaling-server
    privileged: true
    networks:
      internet:
        ipv4_address: 10.0.0.4
      bob-lan:
        ipv4_address: 192.168.2.2
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
        /bin/bash -c "
          echo 'Bob NAT starting...';
          echo 1 > /proc/sys/net/ipv4/ip_forward || echo 'IP forward OK';
          
          ip route del default || echo 'No default route';
          ip route add default via 10.0.0.1 dev eth1 || echo 'Default route OK';
          
          iptables -t nat -A PREROUTING -p udp --dport 9090 -j DNAT --to-destination 10.0.0.2:9090 || echo 'DNAT OK';
          iptables -t nat -A PREROUTING -p udp --dport 5000 -j DNAT --to-destination 192.168.2.3:5000 || echo 'Bob P2P DNAT OK';
          
          # simple nat:
          iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE || echo 'MASQ OK';
          
          iptables -A FORWARD -j ACCEPT || echo 'FORWARD OK';
          echo '✅ Bob NAT ready';
          while true; do sleep 60; echo 'Bob NAT alive'; done
        "

  alice:
    build: .
    depends_on:
      - alice-nat
    networks:
      alice-lan:
        ipv4_address: 192.168.1.3
    cap_add:
    - NET_ADMIN
    volumes:
      - .:/workspace
    working_dir: /workspace
    privileged: true
    stdin_open: true
    tty: true
    command: |
      /bin/bash -c "
        echo 'Alice client ready';
        exec tail -f /dev/null
      "

  bob:
    build: .
    depends_on:
      - bob-nat
    networks:
      bob-lan:
        ipv4_address: 192.168.2.3
    cap_add:
    - NET_ADMIN
    volumes:
      - .:/workspace
    working_dir: /workspace
    privileged: true
    stdin_open: true
    tty: true
    command: |
      /bin/bash -c "
        echo 'Bob client ready';
        exec tail -f /dev/null
      "

networks:
  internet:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1

  alice-lan:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

  bob-lan:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 192.168.2.0/24
          gateway: 192.168.2.1