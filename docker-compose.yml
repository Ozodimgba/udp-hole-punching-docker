services:
  signaling-server:
    build: .
    command: cargo run --bin signaling_server
    networks:
      internet:
        ipv4_address: 10.0.0.2
    ports:
     - "9090:9090" 
    volumes:
      - .:/workspace
    working_dir: /workspace

  alice-nat:
    build: .
    depends_on:
      - signaling-server
    privileged: true
    networks:
      internet:
        ipv4_address: 10.0.0.3
      alice-lan:
        ipv4_address: 192.168.1.2
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      /bin/bash -c "
        echo 'Alice NAT starting...';
        echo 1 > /proc/sys/net/ipv4/ip_forward || echo 'IP forward OK';

        # Default should go to internet via eth1
        ip route del default || echo 'No default route';
        ip route add default via 10.0.0.1 dev eth1 || echo 'Default route OK';
        
        # ðŸ”§ FORWARD ALL UDP TRAFFIC TO ALICE
        iptables -t nat -A PREROUTING -i eth1 -p udp -j DNAT --to-destination 192.168.1.3

        # ðŸ”§ ALLOW ALL UDP FORWARDING
        iptables -A FORWARD -p udp -j ACCEPT
        
        iptables -t nat -A POSTROUTING -o eth1 -j SNAT --to-source 10.0.0.3
        
        echo 'âœ… Alice NAT ready';
        while true; do sleep 60; echo 'Alice NAT alive'; done
      "

  bob-nat:
    build: .
    depends_on:
      - signaling-server
    privileged: true
    networks:
      internet:
        ipv4_address: 10.0.0.4
      bob-lan:
        ipv4_address: 192.168.2.2
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      /bin/bash -c "
        echo 'BOb NAT starting...';
        echo 1 > /proc/sys/net/ipv4/ip_forward || echo 'IP forward OK';

        # Default should go to internet via eth1
        ip route del default || echo 'No default route';
        ip route add default via 10.0.0.1 dev eth1 || echo 'Default route OK';
        
        # ðŸ”§ FORWARD ALL UDP TRAFFIC TO BOB
        iptables -t nat -A PREROUTING -i eth1 -p udp -j DNAT --to-destination 192.168.2.3

        # ðŸ”§ ALLOW ALL UDP FORWARDING
        iptables -A FORWARD -p udp -j ACCEPT
        
        iptables -t nat -A POSTROUTING -o eth1 -j SNAT --to-source 10.0.0.4
        
        echo 'âœ… Bob NAT ready';
        while true; do sleep 60; echo 'Alice NAT alive'; done
      "

  alice:
    build: .
    depends_on:
      - signaling-server
      - alice-nat
    cap_add:
      - NET_ADMIN 
    networks:
      alice-lan:
        ipv4_address: 192.168.1.3
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      /bin/bash -c "
        echo 'Setting up Alice routing...';
        
        # DELETE DEFAULT ROUTE AND SET NAT AS GATEWAY
        ip route del default || echo 'No default route to delete';
        ip route add default via 192.168.1.2 dev eth0 || echo 'Default route OK';
        
        ip route add 10.0.0.0/24 via 192.168.1.2 dev eth0 || echo 'Internet route OK';
        sleep 3;
        echo 'âœ… Alice routing configured';
        ./target/debug/client alice 10.0.0.2:9090  
      "
  
  bob:
    build: .
    depends_on:
      - signaling-server  
      - bob-nat
    cap_add:
      - NET_ADMIN 
    networks:
      bob-lan:
        ipv4_address: 192.168.2.3
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: |
      /bin/bash -c "
        echo 'Setting up Bob routing...';

        ip route del default || echo 'No default route to delete';
        ip route add default via 192.168.2.2 dev eth0 || echo 'Default route OK';
        
        ip route add 10.0.0.0/24 via 192.168.2.2 dev eth0 || echo 'Internet route OK';
        sleep 5;
        echo 'âœ… Bob routing configured';
        ./target/debug/client bob 10.0.0.2:9090  
      "

networks:
  internet:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 10.0.0.0/24
          gateway: 10.0.0.1

  alice-lan:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 192.168.1.0/24
          gateway: 192.168.1.1

  bob-lan:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
    ipam:
      config:
        - subnet: 192.168.2.0/24
          gateway: 192.168.2.1
